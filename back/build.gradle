plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.shop'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Spring MVC 개발 환경
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // ORACLE
    implementation 'com.oracle.database.jdbc:ojdbc11'
    //JDBC
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    //Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Querydsl 추가 : spring 3.0 , jdk 17
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'


    //Spring 유효성 검사 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //modelmapper 라이브러리   : dto 필드의 값을 Entity 클래스에 매핑
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.9'


}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated"

sourceSets {
    main.java.srcDirs += [ querydslDir]
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}